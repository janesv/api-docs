swagger: '2.0'
info:
  version: '1.0'
  title: O2G API
  description: |-
    O2G API позволяет разработчикам обмениваться информацией с сервисом бронирований O2G. Вы можете использовать этот API для интеграции с Вашими сервисами. Чтобы узнать, как получить свои учетные данные и создавать частные / общедоступные приложения, оставьте заявку на сайте. Все конечные точки доступны через https и расположены по адресу api..us/v2/.

    Например, вы можете перечислить всех пользователей учетной записи через https://api..us/v2/users/.
    Данный OAS2 (Swagger 2) файл представляет собой настоящий тестовый API, который находится по внешнему адресу: `http://192.168.0.214:8081`.
  contact:
    name: O2G
    url: 'https://o2g.web-dew.space'
  license:
    name: ''
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  X-TOKEN-BEARER:
    name: X-TOKEN-BEARER
    type: apiKey
    in: header
    description: X-TOKEN-BEARER
paths:
  /oauth/token:
    get:
      responses:
        '200':
          description: Возвращает access-token
          schema:
            type: object
            properties:
              access_token:
                type: string
                description: Токен (необходимо сохранить)
              expires_in:
                type: integer
                description: Срок действия токена (секунды)
              scope:
                type: string
                description: Предоставленный доступ
              token_type:
                type: string
                description: Тип токена
              user_exists:
                type: boolean
                description: Дает информацию о существовании пользователя в системе
            required:
              - access_token
              - expires_in
              - scope
              - token_type
              - user_exists
          examples:
            Пример выхода:
              access_token: 02RXD8JKPXOTTBFQRDH4MW
              expires_in: 7200
              scope: all
              token_type: Bearer
              user_exists: true
        '4370':
          $ref: '#/responses/4370: UserNotAuthorized'
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '6114':
          $ref: '#/responses/6114: BadParameterFormat'
      description: |-
        ### Авторизация по номеру телефона (запрос на подтверждение секрета)

        Метод должен вернуть токен на основании секрета.      
      summary: Запрос на подтверждение секрета
      parameters:
        - in: query
          name: client_id
          type: string
          description: Номер телефона или адрес почты пользователя
          required: true
        - type: string
          in: query
          name: client_secret
          description: Полученный секрет
          required: true
        - type: string
          in: query
          name: scope
          description: Запрашиваемый доступ == all
          required: true
      tags:
        - Авторизация
      operationId: oauth-token
    parameters: []
  /oauth/credentials:
    get:
      responses:
        '204':
          description: No content
          schema:
            type: object
            properties: {}
        '2330':
          $ref: '#/responses/2330: InternalServerError'
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '6114':
          $ref: '#/responses/6114: BadParameterFormat'
      description: |
        ### Авторизация по почте (запрос на отправку секрета)

        Должен быть передан на вход только адрес электронной почты пользователя.

        В результате выполнения метода должен быть сгенерирован и возвращён секрет для последующего использования методов. Секрет должен быть возвращён в виде цифрового 4-х значного кода в письме.
      summary: Запрос на отправку секрета
      parameters:
        - in: query
          name: email
          type: string
          description: Адрес почты пользователя
          required: true
      tags:
        - Авторизация
      operationId: oauth-credentials
      x-internal: false
    parameters: []
  '/spaces/{id}':
    get:
      summary: Получить  информацию о площадке
      operationId: get-spaces-id
      responses:
        '200':
          description: Возвращает объект площадки
          schema:
            $ref: '#/definitions/Space'
        '6771':
          $ref: '#/responses/6771: EntityNotExist'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      description: |-
        ### Получить информацию о площадке по заданному ID площадки

        Метод должен вернуть информацию о площадке по заданному ID площадки.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      tags:
        - Площадки
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - X-TOKEN-BEARER: []
    parameters:
      - type: integer
        name: id
        in: path
        required: true
        description: ID площадки
    put:
      summary: Изменить информацию о площадке
      operationId: put-spaces-id
      responses:
        '200':
          description: Возвращает площадку с обновленным расписанием
          schema:
            $ref: '#/definitions/Space'
        '6771':
          $ref: '#/responses/6771: EntityNotExist'
        '6772':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      description: |-
        ### Изменить информацию о площадке 

        Метод должен обновить указанные данные в таблице `coworking_space`. Если параметр не передан на вход - соответствующее ему поле не обновляем.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть изменены.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScheduleTemplate'
      tags:
        - Площадки
  /spaces:
    get:
      summary: Получить список площадок
      operationId: get-spaces
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
        '204':
          description: 'В случае, если пользователю не принадлежит ни одной площадки'
          schema:
            type: object
            properties: {}
      description: |-
        ### Получить список площадок пользователя

        Метод должен вернуть список площадок, которые принадлежат текущему пользователю.
      tags:
        - Площадки
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - X-TOKEN-BEARER: []
    parameters: []
  /spaces/create:
    parameters: []
    post:
      summary: Создать площадку в системе
      operationId: post-spaces-create
      responses:
        '201':
          description: Возвращает ID созданной площадки
          schema:
            type: object
            properties:
              space_id:
                type: integer
                description: ID площадки
            required:
              - space_id
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
      description: |-
        ### Создать площадку в системе

        Метод должен создать запись в таблице `coworking_space` по текущему пользователю. 

        Если у текущего пользователя нет роли "Владелец площадки", то операция создания не должна быть выполнена.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Space'
          description: ''
      tags:
        - Площадки
      security:
        - X-TOKEN-BEARER: []
  /booking:
    parameters: []
    get:
      summary: Получить список бронирований
      tags:
        - Бронирования
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
        '6114':
          $ref: '#/responses/6114: BadParameterFormat'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
        '10095':
          $ref: '#/responses/10095: NotBookingError'
      operationId: get-bookings
      description: |-
        ### Получить список бронирований по заданному ID площадки

        Метод должен возвращать список бронирований, относящихся к указанной площадке пользователя с учетом заданных фильтров. Если параметр не задан - ко всем площадкам текущего пользователя.

        Если текущий пользователь не является владельцем указанной площадки, то данные не должны быть предоставлены.
      parameters:
        - type: integer
          in: query
          name: space_id
          description: ID площадки
        - type: string
          in: query
          name: start_interval
          description: Дата и время начала интервала
          format: date-time
        - type: string
          in: query
          name: end_interval
          description: Дата и время окончания интервала
          format: date-time
      security:
        - X-TOKEN-BEARER: []
  '/booking/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ID бронирования
    get:
      summary: Получить информацию о бронировании
      tags:
        - Бронирования
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
        '6771':
          $ref: '#/responses/6771: EntityNotExist'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      operationId: get-bookings-id
      description: |-
        ### Получить информацию о бронировании по заданному ID

        Метод должен возвращать информацию о бронировании по заданному ID бронирования. Если параметр не задан - обо всех бронированиях всех площадок текущего пользователя.

        Если текущий пользователь не является владельцем площадки, к которой относится запрашиваемое бронирование, то данные не должны быть предоставлены.
      parameters: []
      security:
        - X-TOKEN-BEARER: []
  '/places/{id}':
    get:
      summary: Получить информацию о месте
      tags:
        - Места
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Place'
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '6771':
          $ref: '#/responses/6771: EntityNotExist'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      operationId: get-places-id
      description: |-
        ### Получить информацию о месте по заданному ID площадки

        Метод должен возвращать информацию о месте на площадке по заданному ID площадки
        с учётом фильтров. 

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
      security:
        - X-TOKEN-BEARER: []
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ID места
    put:
      summary: Изменить информацию о месте
      operationId: put-places-id
      responses:
        '200':
          description: OK
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '6114':
          $ref: '#/responses/6114: BadParameterFormat'
        '6771':
          $ref: '#/responses/6771: EntityNotExist'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      description: |-
        ### Изменить информацию о месте 

        Метод должен обновить указанные данные в таблице `place`. Если параметр не передан на вход - соответствующее ему поле не обновляем.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть изменены.
      tags:
        - Места
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Place'
  /places:
    get:
      summary: Получить список мест
      tags:
        - Места
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Place'
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      operationId: get-places
      description: |-
        ### Получить список мест по заданному ID площадки

        Метод должен возвращать список мест на площадке по заданному ID площадки с учётом фильтров.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
      security:
        - X-TOKEN-BEARER: []
    parameters: []
  /places/create:
    parameters: []
    post:
      summary: Создать место на площадке
      operationId: post-places-create
      responses:
        '200':
          description: Возвращает ID созданного места
          schema:
            type: object
            properties:
              place_id:
                type: integer
                description: ID места
            required:
              - place_id
        '5839':
          $ref: '#/responses/5839: SomeParametersNotSpecified'
        '6114':
          $ref: '#/responses/6114: BadParameterFormat'
        '10030':
          $ref: '#/responses/10030: UserNotOwner'
      description: |-
        ### Создать место на площадке

        Метод должен создать запись в таблице `place` для указанной площадки. 

        Если у текущего пользователя нет роли "Владелец площадки" и/или ID площадки не был указан, то операция создания не должна быть выполнена.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Place'
          description: ''
      tags:
        - Места
      security:
        - X-TOKEN-BEARER: []
  /registration:
    post:
      summary: Запросить регистрацию по электронной почте
      operationId: post-registration
      responses:
        '204':
          description: No Content
        '1446':
          $ref: '#/responses/1446: BadToken'
        '1605':
          $ref: '#/responses/1605: AlreadyExist'
        '2330':
          $ref: '#/responses/2330: InternalServerError'
      description: |-
        ### Запросить регистрацию по электронной почте / номеру телефона

        Метод должен проверить соответствие входных параметров на соответствие имеющимся.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  first_name:
                    type: string
                    description: Имя пользователя (представителя)
                  last_name:
                    type: string
                    description: Фамилия пользователя (представителя)
                required:
                  - first_name
                  - last_name
              password:
                type: string
                description: Пароль пользователя
            required:
              - password
      security:
        - X-TOKEN-BEARER: []
      tags:
        - Регистрация
parameters: {}
definitions:
  Space:
    title: Space
    description: Модель площадки
    type: object
    x-tags:
      - Модель
    properties:
      id:
        type: integer
        description: ID площадки (PK)
        readOnly: true
      name:
        type: string
        description: Название площадки
        example: TopWork
      latitude:
        type:
          - number
        description: Широта
        format: float
      longitude:
        type:
          - number
        description: Долгота
        format: float
      address:
        type: string
        description: Адрес прописью
        example: 'Москва, ул. Садовников, д. 15'
      description:
        type: string
        description: |
          Описание площадки
      schedule_template:
        type: array
        description: Расписание на каждый день недели
        items:
          $ref: '#/definitions/ScheduleTemplate'
      photo:
        type: array
        description: Фотографии площадки
        items:
          $ref: '#/definitions/Picture'
      is_active:
        type: boolean
        description: Статус активности площадки в системе
      schedule:
        type: array
        description: Расписание в соответствии с календарными датами
        items:
          $ref: '#/definitions/Schedule'
    required:
      - id
      - name
      - latitude
      - longitude
      - address
      - description
      - schedule_template
  ScheduleTemplate:
    type: object
    title: ScheduleTemplate
    description: Модель шаблона расписания для площадки
    properties:
      weekday:
        type: integer
        description: Номер дня недели
      start_time:
        type:
          - string
        format: time
        description: Время начала работы
      end_time:
        type: string
        format: time
        description: Время окончания работы
    x-tags:
      - Модель
  Schedule:
    type: object
    title: Schedule
    description: Модель расписания для площадки в соответствии с календарной датой
    x-tags:
      - Модель
    properties:
      calendar_date:
        type: string
        description: Номер дня недели
        format: date
      start_time:
        type:
          - string
        format: time
        description: Время начала работы
      end_time:
        type: string
        format: time
        description: Время окончания работы
    required:
      - calendar_date
    x-examples:
      Пример:
        calendar_date: '2019-08-24'
        start_time: '14:15:22Z'
        end_time: '16:15:22Z'
  Place:
    title: Place
    type: object
    x-tags:
      - Модель
    description: Модель рабочего места
    properties:
      id:
        type: integer
        readOnly: true
      place_type:
        type: string
      place_number:
        type: string
      description:
        type: string
      space_id:
        type: integer
      place_facilities:
        type: array
        items:
          $ref: '#/definitions/PlaceFacility'
      price:
        type: number
        format: float
      price_type:
        $ref: '#/definitions/PriceType'
      is_active:
        type: boolean
        description: Статус активности рабочего места в системе
    required:
      - id
      - place_type
      - space_id
      - price
      - price_type
  Picture:
    title: Picture
    type: object
    x-tags:
      - Модель
    description: Модель картинки / фотографии
    properties:
      url:
        type: string
        description: Ссылка на картинку
      sort:
        type: integer
        description: Порядок сортировки
    required:
      - url
  PlaceFacility:
    title: PlaceFacility
    type: object
    x-tags:
      - Модель
    description: Модель дополнительного оборудования на рабочем месте
    properties:
      id:
        type: integer
        description: ID оборудования (PK)
        readOnly: true
      name:
        type: string
        description: Название
    required:
      - id
      - name
  Booking:
    title: Booking
    type: object
    description: Модель бронирования
    properties:
      id:
        type: integer
        description: ID бронирования
        readOnly: true
      space:
        $ref: '#/definitions/Space'
      place:
        $ref: '#/definitions/Place'
      state:
        $ref: '#/definitions/BookingState'
      plan_start:
        type: string
        format: date-time
        description: Дата и время начала бронирования
      plan_end:
        type: string
        format: date-time
        description: Дата и время окончания бронирования
      price:
        type: number
        format: float
      fact_start:
        type: string
        format: date-time
        description: Фактическая дата и время начала бронирования
      fact_end:
        type: string
        format: date-time
        description: Фактическая дата и время окончания бронирования
    required:
      - id
      - space
      - place
      - state
      - plan_start
      - plan_end
    x-tags:
      - Модель
  PriceType:
    title: PriceType
    type: string
    description: Тип цены
    enum:
      - hourly
      - daily
      - weekly
      - monthly
    x-tags:
      - Enums
  BookingState:
    type: string
    title: BookingState
    x-tags:
      - Enums
    description: Статусы бронирования
    enum:
      - Не оплачено
      - Оплачено
      - Активное
      - Завершено
      - Отменено
  ErrorResponse:
    title: ErrorResponse
    type: object
    description: Модель ответа при ошибке
    properties:
      code:
        type: integer
        description: Код ответа сервера
      title:
        type: string
        description: Заголовок
      message:
        type: string
        description: Сообщение
      action:
        type: string
        description: Действие для клиента
    required:
      - code
      - title
    x-examples:
      'Code: 404':
        code: 404
        title: not found
        message: Не найдено
        action: retry
tags:
  - name: Авторизация
    description: Методы для осуществления авторизации в системе
  - name: Регистрация
    description: Методы для осуществления регистрации в системе
  - name: Площадки
    description: Методы для выполнения операций над объектами типа `Space`
  - name: Бронирования
    description: Методы для выполнения операций над объектами типа `Booking`
  - name: Места
    description: Методы для выполнения операций над объектами типа `Place`
responses:
  '5839: SomeParametersNotSpecified':
    description: |
      Не предоставлены необходимые параметры
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 5839
        title: SomeParametersNotSpecified
        message: Не предоставлены необходимые параметры
  '6114: BadParameterFormat':
    description: |
      Параметры имеют недопустимое форматирование или тип данных
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 6114
        title: BadParameterFormat
        message: Параметры имеют недопустимое форматирование или тип данных
  '0: OK':
    description: |
      ОК
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 0
        title: OK
        message: OK
  '950: SmallLength':
    description: |
      Недостаточная длина строки
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 950
        title: SmallLength
        message: Недостаточная длина строки
  '1234: Undefined':
    description: |
      Неизвестно
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 1234
        title: Undefined
        message: Неизвестно
  '1446: BadToken':
    description: |
      Неверный токен
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 1446
        title: BadToken
        message: Неверный токен
  '1447: BadTimeInterval':
    description: |
      Срок действия токена истек
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 1447
        title: BadTimeInterval
        message: Срок действия токена истек
  '1497: IncorrectPhoneOrMail':
    description: |
      Неверный номер телефона или адрес почты
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 1497
        title: IncorrectPhoneOrMail
        message: Неверный номер телефона или адрес почты
  '1605: AlreadyExist':
    description: |
      Объект уже есть в системе
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 1605
        title: AlreadyExist
        message: Объект уже есть в системе
  '2123: IncorrectOldPassword':
    description: |
      Старый пароль неверно указан
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 2123
        title: IncorrectOldPassword
        message: Старый пароль неверно указан
  '4370: UserNotAuthorized':
    description: |
      Пользователь неавторизован
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 4370
        title: UserNotAuthorized
        message: Пользователь неавторизован
  '2330: InternalServerError':
    description: |
      Внутренняя ошибка сервера
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 2330
        title: InternalServerError
        message: Внутренняя ошибка сервера
  '2918: IncorrectPartnerID':
    description: |
      Неверный ID партнера
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 2918
        title: IncorrectPartnerID
        message: Неверный ID партнера
  '6771: EntityNotExist':
    description: |
      Сущность не существует
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 2918
        title: EntityNotExist
        message: Сущность не существует
  '10095: NotBookingError':
    description: |
      Бронирование не существует
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 10095
        title: NotBookingError
        message: Бронирование не существует
  '11001: NotPartnerError':
    description: |
      Партнер не существует
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 11001
        title: NotPartnerError
        message: Партнер не существует
  '10030: UserNotOwner':
    description: |
      Пользователь не является владельцем
    schema:
      $ref: '#/definitions/ErrorResponse'
    examples:
      application/json:
        code: 10030
        title: UserNotOwner
        message: Пользователь не является владельцем
host: '192.168.0.214:8081'
security:
  - apikey: []
