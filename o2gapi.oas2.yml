swagger: '2.0'
info:
  version: '1.0'
  title: O2G API
  description: |-
    Данный OAS2 (Swagger 2) файл представляет собой настоящий API, который находится по адресу: `http://192.168.0.214:8081/restapi/v1`.

    Для получения информации об аутентификации нажмите на схему безопасности `apikey` на боковой панели редактора.
  contact:
    name: O2G
    url: 'https://o2g.web-dew.space'
  license:
    name: ''
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apikey:
    type: apiKey
    in: header
    name: X-TOKEN-BEARER
    description: 'X-TOKEN-BEARER - токен, используемый в хэдере запросов'
paths:
  /oauth/credentials:
    get:
      responses:
        '204':
          $ref: ''
        '500':
          $ref: '#/responses/internal-error:2330'
      description: |
        ### Авторизация по почте (запрос на отправку секрета)

        Должен быть передан на вход только адрес электронной почты пользователя.

        В результате выполнения метода должен быть сгенерирован и возвращён секрет для последующего использования методов. Секрет должен быть возвращён в виде цифрового 4-х значного кода в письме.

        Возможные ошибки:
        * 2330 - внутренняя ошибка сервера
        * 5839 - не предоставлены необходимые параметры
        * 6114 - параметры имеют недопустимое форматирование или тип данных
      summary: Авторизация по почте
      parameters:
        - in: query
          name: email
          type: string
          description: Адрес почты пользователя
      tags:
        - Авторизация
      operationId: oauth-credentials
  '/spaces/{id}':
    get:
      summary: Получить  информацию о площадке
      operationId: get-spaces-id
      responses:
        '200':
          description: Возвращает массив площадок
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
      description: |-
        ### Получить информацию о площадке по заданному ID площадки

        Метод должен вернуть информацию о площадке по заданному ID площадки.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      tags:
        - Площадки
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
    parameters:
      - type: integer
        name: id
        in: path
        required: true
        description: ID площадки
    put:
      summary: Изменить информацию о площадке
      operationId: put-spaces-id
      responses:
        '200':
          description: Возвращает площадку с обновленным расписанием
          schema:
            $ref: '#/definitions/Space'
      description: |-
        ### Изменить информацию о площадке 

        Метод должен обновить указанные данные в таблице `coworking_place`. Если параметр не передан на вход - соответствующее ему поле не обновляем.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть изменены.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScheduleTemplate'
      tags:
        - Площадки
  /spaces:
    get:
      summary: Получить список площадок
      operationId: get-spaces
      responses:
        '200':
          description: Возвращает массив площадок
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
        '204':
          description: 'В случае, если пользователю не принадлежит ни одной площадки'
          schema:
            type: object
            properties: {}
      description: |-
        ### Получить список площадок пользователя

        Метод должен вернуть список площадок, которые принадлежат текущему пользователю (владельцу площадки).
      tags:
        - Площадки
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
    parameters: []
  /spaces/create:
    parameters: []
    post:
      summary: Создать площадку в системе
      operationId: post-spaces-create
      responses:
        '201':
          description: Возвращает ID созданной площадки
          schema:
            type: object
            properties:
              space_id:
                type: integer
                description: ID площадки
            required:
              - space_id
      description: |-
        ### Создать площадку в системе

        Метод должен создать запись в таблице `coworking_space` по текущему пользователю. 

        Если у текущего пользователя нет роли "Владелец площадки", то операция создания не должна быть выполнена.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Space'
          description: ''
      tags:
        - Площадки
  /bookings:
    parameters: []
    get:
      summary: Получить список бронирований
      tags:
        - Бронирования
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
      operationId: get-bookings
      description: |-
        ### Получить список бронирований по заданному ID площадки

        Метод должен возвращать список бронирований, относящихся к указанной площадке пользователя. Если параметр не задан - ко всем площадкам текущего пользователя.

        Должна присутствовать информация о номере забронированного места, времени бронирования, цене и статусе.

        Если текущий пользователь не является владельцем указанной площадки, то данные не должны быть предоставлены.
      parameters:
        - type: integer
          in: query
          name: space_id
          description: ID площадки
  '/bookings/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ID бронирования
    get:
      summary: Получить информацию о бронировании
      tags:
        - Бронирования
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
      operationId: get-bookings
      description: |-
        ### Получить информацию о бронировании по заданному ID

        Метод должен возвращать информацию о бронировании. Если параметр не задан - ко всем площадкам текущего пользователя.

        Если текущий пользователь не является владельцем площадки, к которой относится запрашиваемое бронирование, то данные не должны быть предоставлены.
      parameters:
        - type: integer
          in: query
          name: space_id
          description: ID площадки
  '/places/{id}':
    get:
      summary: Получить информацию о месте
      tags:
        - Места
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Place'
      operationId: get-places-id
      description: |-
        ### Получить информацию о месте по заданному ID площадки

        Метод должен возвращать информацию о месте на площадке с учётом фильтров.

        Даты должны быть заполнены обе одновременно или же они должны одновременно отсутствовать в качестве входных параметров.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ID места
  /places:
    get:
      summary: Получить список мест
      tags:
        - Места
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Place'
      operationId: get-places
      description: |-
        ### Получить список мест по заданному ID площадки

        Метод должен возвращать список месте на площадке на с учётом фильтров.

        Даты должны быть заполнены обе одновременно или же они должны одновременно отсутствовать в качестве входных параметров.

        Если текущий пользователь не является владельцем площадки, то данные не должны быть предоставлены.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
    parameters: []
  /places/create:
    parameters: []
    post:
      summary: Создать место на площадке
      operationId: post-places-create
      responses:
        '200':
          description: Возвращает ID созданного места
          schema:
            type: object
            properties:
              place_id:
                type: integer
                description: ID места
            required:
              - place_id
      description: |-
        ### Создать место на площадке

        Метод должен создать запись в таблице `place` для указанной площадки. 

        Если у текущего пользователя нет роли "Владелец площадки" и/или ID площадки не был указан, то операция создания не должна быть выполнена.
      parameters:
        - type: string
          in: query
          name: space_id
          description: ID площадки
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Place'
      tags:
        - Места
parameters: {}
definitions:
  Space:
    title: Space
    description: Модель площадки
    type: object
    x-tags:
      - Space
      - Модель
    properties:
      id:
        type: integer
        description: ID площадки (PK)
        readOnly: true
      name:
        type: string
        description: Название площадки
        example: TopWork
      latitude:
        type:
          - number
        description: Широта
        format: float
      longitude:
        type:
          - number
        description: Долгота
        format: float
      address:
        type: string
        description: Адрес прописью
        example: 'Москва, ул. Садовников, д. 15'
      description:
        type: string
        description: |
          Описание площадки
      schedule_template:
        type: array
        items:
          $ref: '#/definitions/ScheduleTemplate'
      photo:
        type: array
        description: Фотографии площадки
        items:
          $ref: '#/definitions/Picture'
    required:
      - id
      - name
      - latitude
      - longitude
      - address
      - description
      - schedule_template
  ScheduleTemplate:
    type: object
    title: ScheduleTemplate
    description: Модель шаблона расписания для площадки
    properties:
      weekday:
        type: integer
        description: Номер дня недели
      start_time:
        type:
          - string
        format: time
        description: Время начала работы
      end_time:
        type: string
        format: time
        description: Время окончания работы
    x-tags:
      - Space
      - Модель
  Place:
    title: Place
    type: object
    x-tags:
      - Place
      - Модель
    description: Модель рабочего места
    properties:
      id:
        type: integer
        readOnly: true
      place_type:
        type: string
      place_number:
        type: string
      description:
        type: string
      space_id:
        type: integer
      place_facilities:
        type: array
        items:
          $ref: '#/definitions/PlaceFacility'
      price:
        type: number
        format: float
      price_type:
        $ref: '#/definitions/PriceType'
      photo:
        type: array
        items:
          $ref: '#/definitions/Picture'
    required:
      - id
      - place_type
      - space_id
      - price
      - price_type
  Picture:
    title: Picture
    type: object
    x-tags:
      - Picture
      - Модель
    description: Модель картинки / фотографии
    properties:
      url:
        type: string
        description: Ссылка на картинку
      sort:
        type: integer
        description: Порядок сортировки
    required:
      - url
  PlaceFacility:
    title: PlaceFacility
    type: object
    x-tags:
      - Place
      - Модель
    description: Модель дополнительного оборудования на рабочем месте
    properties:
      id:
        type: integer
        description: ID оборудования (PK)
        readOnly: true
      name:
        type: string
        description: Название
    required:
      - id
      - name
  PriceType:
    title: PriceType
    type: string
    description: Тип цены
    enum:
      - hourly
      - daily
      - weekly
      - monthly
    x-tags:
      - Enums
      - Модель
  Booking:
    title: Booking
    type: object
    x-tags:
      - Booking
      - Модель
    description: Модель бронирования
    properties:
      id:
        type: integer
        description: ID бронирования
        readOnly: true
      space:
        $ref: '#/definitions/Space'
      place:
        $ref: '#/definitions/Place'
      state:
        $ref: '#/definitions/BookingState'
      plan_start:
        type: string
        format: date-time
        description: Дата и время начала бронирования
      plan_end:
        type: string
        format: date-time
        description: Дата и время окончания бронирования
      price:
        type: number
        format: float
      fact_start:
        type: string
        format: date-time
        description: Фактическая дата и время начала бронирования
      fact_end:
        type: string
        format: date-time
        description: Фактическая дата и время окончания бронирования
    required:
      - id
      - space
      - place
      - state
      - plan_start
      - plan_end
  BookingState:
    type: string
    title: BookingState
    x-tags:
      - Enums
      - Модель
    description: Статусы бронирования
    enum:
      - Не оплачено
      - Оплачено
      - Активное
      - Завершено
      - Отменено
tags:
  - name: Авторизация
    description: Методы для осуществления авторизации в системе
  - name: Площадки
    description: Методы для выполнения операций над объектами типа `Space`
  - name: Бронирования
    description: Методы для выполнения операций над объектами типа `Booking`
  - name: Места
    description: Методы для выполнения операций над объектами типа `Place`
basePath: /restapi/v1
responses:
  'internal-error:2330':
    description: |
      Внутренняя ошибка сервера
    schema:
      type: object
      properties:
        code:
          type: integer
        title:
          type: string
        message:
          type: string
        action:
          type: string
    examples:
      application/json:
        code: 2330
        title: Internal Server Error
        message: Внутренняя ошибка сервера
host: '192.168.0.214:8081'
security:
  - apikey: []
